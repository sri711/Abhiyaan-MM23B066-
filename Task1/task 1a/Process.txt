PROCESS:

1)setting up shared folders with vbox
2)had to unzip given file for being able to share
3)given folder in itself is a workspace, no need to mount it on a workspace again and buil it
4)shared file from windows to vbox
5)opened it using terminal and created a node
6)subscribing to the given topic /start_here
7)subsctibing to subsequent topics form the same node by writing a publisher subscriber script using python
8)this script through a single node subscribes to multiple topics and prints the message in the terminal
9)also had to configure the setup.py file by adding entry points 
....................................................................................................................................
RIDDLE1-I heard: "Knock, Knock. Who is there? Tank. Tank who?"
ANSWER - /you_are_welcome

RIDDLE2-I heard: "What happened to the Italian chef who died"
ANSWER - /Pasta_way

RIDDLE3-I heard: "What did the buffalo say when her son left?"
ANSWER - /Bison

RIDDLE4-"What's the most terrifying word in Nuclear Physics?"
ANSWER - /Oops

RIDDLE5-"Why did the robot go to the shoe shop?"
ANSWER - /Rebooted

Congratulations! You have successfully completed the challenge. Hope you enjoyed it.
....................................................................................................................................

All the topics -
/you_are_welcome
/Pasta_way
/Bison
/Oops
/Rebooted



LEARNING:

WORKSPACE 
    -A workspace is a directory containing ROS 2 packages
    -it is confined to be in a particular strructure
 NODES
    -each node is responsible for a single, modular purpose
    -nodes can send and receive data from other nodes thro topics, services, actions, or parameters
    -A single exxectuable program file can have multiple nodes
    -"ros2 run" command runs the executable from a packaage
    -"ros2 node list" command will show you the names of all running nodes
    -remapping command
    -node info command
TOPICS
    -topics act as a bus for nodes to exchange messages
    -rqt_graph helps visualize all the nodes and the topics subscribed to
    - ros2 topic list command
    -ros2 topic echo command
    -ros2 topic info command
    -ros2 interface show command
    -ros2 topic pub command-publishes messages dierectly if given in proper format
    -publishing the command w the rate option gives out a steady stream of command instead of a one time message
    -ros2 topic hz command
SERVICES 
    -Services are another method of communication for NODES
    -based on a call-and-response model versus the publisher-subscriber model of topics
    -provides data only when specifically called upon
    -ros2 serivce type command
    -ros2 sevice list -t command
    -ros2 service find command
    -ros2 interface show command
    -the request and response both have different structures seperated by --- in the above command
    -ros2 service call command
PARAMETERS 
    -A parameter is a configuration value of a node
    -basically the settings for the node
    -ros2 param list command
    -ros2 param get command
    -ros2 param set command
    -ros2 param dump command
    -ros2 param load command
ACTIONS 
    -it is a communication type for long running task
    -three parts a goal, feedback, and  result
    -Actions are built on topics and services
    - same as service but actions can be cancelled and actions provide steady feedback
    -ros2 node info command-list of actions node provides
    -ros2 action list command
    -ros2 action info command
    -ros2 interface show command
    -ros2 action send_goal command-value in YAML -human-readable data serialization language
COLCON BUILD
RCLYPY - ros client library for python



